"""empty message

Revision ID: d8e7cbb8f617
Revises: 
Create Date: 2019-10-19 17:40:46.806922

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd8e7cbb8f617'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('event_ids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_ids_id'), 'event_ids', ['id'], unique=False)
    op.create_index(op.f('ix_attendance_event_id'), 'attendance', ['event_id'], unique=False)
    op.create_index(op.f('ix_attendance_id'), 'attendance', ['id'], unique=False)
    op.create_index(op.f('ix_attendance_user_id'), 'attendance', ['user_id'], unique=False)
    op.drop_index('ix_attendance_recorded_at', table_name='attendance')
    op.add_column('events', sa.Column('event_id', sa.Integer(), nullable=True))
    op.add_column('events', sa.Column('has_happened', sa.Boolean(), nullable=True))
    op.add_column('events', sa.Column('update_created_at', sa.DateTime(), nullable=True))
    op.add_column('events', sa.Column('update_is_active', sa.Boolean(), nullable=True))
    op.alter_column('events', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('events', 'end_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('events', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('events', 'is_confirmed',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('events', 'name',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('events', 'notice_days',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('events', 'notice_mult',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('events', 'start_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index(op.f('ix_events_event_id'), 'events', ['event_id'], unique=False)
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_index(op.f('ix_events_organised_by'), 'events', ['organised_by'], unique=False)
    op.drop_index('ix_events_created_at', table_name='events')
    op.drop_index('ix_events_name', table_name='events')
    op.create_foreign_key(None, 'events', 'event_ids', ['event_id'], ['id'])
    op.alter_column('proposal_responses', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.create_index(op.f('ix_proposal_responses_event_id'), 'proposal_responses', ['event_id'], unique=False)
    op.create_index(op.f('ix_proposal_responses_id'), 'proposal_responses', ['id'], unique=False)
    op.create_index(op.f('ix_proposal_responses_user_id'), 'proposal_responses', ['user_id'], unique=False)
    op.drop_index('ix_proposal_responses_response', table_name='proposal_responses')
    op.drop_index('ix_proposal_responses_response_datetime', table_name='proposal_responses')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_first_name', table_name='users')
    op.drop_index('ix_users_nickname', table_name='users')
    op.drop_index('ix_users_surname', table_name='users')
    op.create_unique_constraint(None, 'users', ['nickname'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index('ix_users_surname', 'users', ['surname'], unique=False)
    op.create_index('ix_users_nickname', 'users', ['nickname'], unique=True)
    op.create_index('ix_users_first_name', 'users', ['first_name'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_index('ix_proposal_responses_response_datetime', 'proposal_responses', ['created_at'], unique=False)
    op.create_index('ix_proposal_responses_response', 'proposal_responses', ['description'], unique=False)
    op.drop_index(op.f('ix_proposal_responses_user_id'), table_name='proposal_responses')
    op.drop_index(op.f('ix_proposal_responses_id'), table_name='proposal_responses')
    op.drop_index(op.f('ix_proposal_responses_event_id'), table_name='proposal_responses')
    op.alter_column('proposal_responses', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.create_index('ix_events_name', 'events', ['name'], unique=False)
    op.create_index('ix_events_created_at', 'events', ['created_at'], unique=False)
    op.drop_index(op.f('ix_events_organised_by'), table_name='events')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_index(op.f('ix_events_event_id'), table_name='events')
    op.alter_column('events', 'start_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('events', 'notice_mult',
               existing_type=postgresql.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('events', 'notice_days',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('events', 'name',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.alter_column('events', 'is_confirmed',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('events', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('events', 'end_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('events', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_column('events', 'update_is_active')
    op.drop_column('events', 'update_created_at')
    op.drop_column('events', 'has_happened')
    op.drop_column('events', 'event_id')
    op.create_index('ix_attendance_recorded_at', 'attendance', ['recorded_at'], unique=False)
    op.drop_index(op.f('ix_attendance_user_id'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_id'), table_name='attendance')
    op.drop_index(op.f('ix_attendance_event_id'), table_name='attendance')
    op.drop_index(op.f('ix_event_ids_id'), table_name='event_ids')
    op.drop_table('event_ids')
    # ### end Alembic commands ###
